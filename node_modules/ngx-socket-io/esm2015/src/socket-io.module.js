import { NgModule, InjectionToken } from '@angular/core';
import { WrappedSocket } from './socket-io.service';
/** Socket factory */
import * as ɵngcc0 from '@angular/core';
export function SocketFactory(config) {
    return new WrappedSocket(config);
}
export const SOCKET_CONFIG_TOKEN = new InjectionToken('__SOCKET_IO_CONFIG__');
export class SocketIoModule {
    static forRoot(config) {
        return {
            ngModule: SocketIoModule,
            providers: [
                { provide: SOCKET_CONFIG_TOKEN, useValue: config },
                {
                    provide: WrappedSocket,
                    useFactory: SocketFactory,
                    deps: [SOCKET_CONFIG_TOKEN]
                }
            ]
        };
    }
}
SocketIoModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SocketIoModule });
SocketIoModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SocketIoModule_Factory(t) { return new (t || SocketIoModule)(); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SocketIoModule, [{
        type: NgModule,
        args: [{}]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29ja2V0LWlvLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NvY2tldC1pby5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUIsY0FBYyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTlFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUVwRCxxQkFBcUI7O0FBQ3JCLE1BQU0sVUFBVSxhQUFhLENBQUMsTUFBc0I7QUFDcEQsSUFBSSxPQUFPLElBQUksYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ3JDLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxJQUFJLGNBQWMsQ0FBaUIsc0JBQXNCLENBQUMsQ0FBQztBQUc5RixNQUFNLE9BQU8sY0FBYztBQUMzQixJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBc0I7QUFBSSxRQUNyQyxPQUFPO0FBQ2YsWUFBWSxRQUFRLEVBQUUsY0FBYztBQUNwQyxZQUFZLFNBQVMsRUFBRTtBQUN2QixnQkFBZ0IsRUFBRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRTtBQUNsRSxnQkFBZ0I7QUFDaEIsb0JBQW9CLE9BQU8sRUFBRSxhQUFhO0FBQzFDLG9CQUFvQixVQUFVLEVBQUUsYUFBYTtBQUM3QyxvQkFBb0IsSUFBSSxFQUFHLENBQUMsbUJBQW1CLENBQUM7QUFDaEQsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYixTQUFTLENBQUM7QUFDVixJQUFJLENBQUM7QUFDTDswQ0FmQyxRQUFRLFNBQUMsRUFBRTs7Ozs7MEJBQ1A7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzLCBJbmplY3Rpb25Ub2tlbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU29ja2V0SW9Db25maWcgfSBmcm9tICcuL2NvbmZpZy9zb2NrZXQtaW8uY29uZmlnJztcbmltcG9ydCB7IFdyYXBwZWRTb2NrZXQgfSBmcm9tICcuL3NvY2tldC1pby5zZXJ2aWNlJztcblxuLyoqIFNvY2tldCBmYWN0b3J5ICovXG5leHBvcnQgZnVuY3Rpb24gU29ja2V0RmFjdG9yeShjb25maWc6IFNvY2tldElvQ29uZmlnKSB7XG4gICAgcmV0dXJuIG5ldyBXcmFwcGVkU29ja2V0KGNvbmZpZyk7XG59XG5cbmV4cG9ydCBjb25zdCBTT0NLRVRfQ09ORklHX1RPS0VOID0gbmV3IEluamVjdGlvblRva2VuPFNvY2tldElvQ29uZmlnPignX19TT0NLRVRfSU9fQ09ORklHX18nKTtcblxuQE5nTW9kdWxlKHt9KVxuZXhwb3J0IGNsYXNzIFNvY2tldElvTW9kdWxlIHtcbiAgICBzdGF0aWMgZm9yUm9vdChjb25maWc6IFNvY2tldElvQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxTb2NrZXRJb01vZHVsZT4ge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbmdNb2R1bGU6IFNvY2tldElvTW9kdWxlLFxuICAgICAgICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgICAgICAgICAgeyBwcm92aWRlOiBTT0NLRVRfQ09ORklHX1RPS0VOLCB1c2VWYWx1ZTogY29uZmlnIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBwcm92aWRlOiBXcmFwcGVkU29ja2V0LFxuICAgICAgICAgICAgICAgICAgICB1c2VGYWN0b3J5OiBTb2NrZXRGYWN0b3J5LFxuICAgICAgICAgICAgICAgICAgICBkZXBzIDogW1NPQ0tFVF9DT05GSUdfVE9LRU5dXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICB9O1xuICAgIH1cbiB9XG4iXX0=